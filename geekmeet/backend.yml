apiVersion: apps/v1
kind: Deployment
metadata:
  name: geekmeet-backend-deployment
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: geekmeet-backend
  replicas: 1 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: geekmeet-backend
    spec:
      containers:
      - name: geekmeet-backend
        image: ghcr.io/xpadev-net/geekmeet_backend:v0.0.6
        ports:
          - containerPort: 3000
        env:
          - name: ExpressPort
            value: "3000"
          - name: ExpressCorsHost
            value: https://geekmeet.xpadev.net
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          failureThreshold: 1
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /healthz
            port: 3000
          failureThreshold: 180
          periodSeconds: 10
        resources:
          limits:
            memory: 4Gi
            cpu: "2"
          requests:
            memory: 1Gi
            cpu: "0.5"
---
kind: Service
apiVersion: v1
metadata:
  name: geekmeet-backend
spec:
  selector:
    app: geekmeet-backend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer
  loadBalancerIP: 192.168.11.5